# Coleta de Métricas

> Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu.

**Especificação em OAS** </br>
<a href="files/swagger/ingestion-metric.yaml" download="ingestion-metric.yaml">Download da Especificação</a>

**Detalhamento Técnico** </br>
<a href="files/docs/ingestion-metric.docx" download="ingestion-metric.docx">Download do Detalhamento Técnico</a>


API de ingestão da coleta de métricas.



API que recebe os logs da troca de dados para geração de métricas.

A API de reporte fornece operações que permitem a inclusão dos
registros de chamada na plataforma de Coleta de Métricas.

A inclusão de reportes pode ser feita de maneira individual ou em
lote, conforme respectivas documentações.

Os dados que são inseridos na API de Reporte são sempre
processados de maneira assíncrona, e sua persistência se utiliza
de consistência posterior (eventual consistency), portanto, um
registro tem um tempo de processamento em que ele não estará
disponível para consulta até que ele seja persistido.


<h2 id="API de ingestão da coleta de métricas-Segurança">Segurança</h2>

A autenticação das requisições se dará com base na assinatura do body das requisições.



<h2 id="API de ingestão da coleta de métricas-Requisitos">Requisitos</h2>
* Organização devidamente registrada no diretório
* Certificado de assinatura devidamente cadastrado no diretório a nivel de organização

A validação da autenticidade será baseada no certificado de assinatura do body que
será validado no keystore do diretório.

Todas as requisições deverão ser enviadas com o Content-Type: application/jwt.<br />
Para assinar uma requisição a organização deverá:<br>
    1) Identifique a chave privada e o certificado de assinatura correspondente a serem usados para assinar o payload<br>
    2) Geração do JOSE Header Montar um JSON com os campos obrigatórios:<br>
    * **alg** - Algoritmo que será usado para assinar o JWS. Deve ser preenchido com o valor **"PS256"**.<br>
    * **kid** - Valor do identificador da chave utilizado para a assinatura.<br>
    * **typ** - Tipo de conteúdo usado para trafegar mensagens na API. Deve ser preenchido com o valor **"JWT"**. E converter para Base64Url seguindo o padrão especificado na [RFC4648](https://datatracker.ietf.org/doc/html/rfc4648#section-5).<br>
    3) Montando o payload JWS Body da requisição no formato JSON convertido para Base64Url seguindo o padrão especificado na [RFC4648](https://datatracker.ietf.org/doc/html/rfc4648#section-5).<br>
    4) Gerar a assinatura digital conforme especificado na [RFC7515](https://datatracker.ietf.org/doc/html/rfc7515).<br>
    5) Juntar as partes concatenando com ponto (.) para formar o JWS<br>
    
    **JWS = Base64url(JOSEHeader) + "." + Base64url(payload JWT) + "." + Base64url(digital signature)**

A assinatura do body deve seguir o padrão JWS definido na [RFC7515](https://datatracker.ietf.org/doc/html/rfc7515).



<h2 id="API de ingestão da coleta de métricas-Server-event">Server event</h2>

### `/report-api/v1/server-event`

Inclusão unitária de reporte pelo servidor.

Inclusão de reporte individual na plataforma por um participante no papel de transmissor (lado que recebeu a chamada).

<h2 id="API de ingestão da coleta de métricas-Server-batch">Server batch</h2>

### `/report-api/v1/server-batch`

Inclusão em massa de reportes pelo transmissor.

Inclusão de reportes em massa na plataforma. Ao enviar um lote de reportes,
a plataforma vai fazer o processo de validação de cada reporte de maneira síncrona
e devolver o resultado dessa validação na resposta, sendo que o status HTTP de
retorno vai refletir esse resultado (vide documentação de cada status de retorno).
No entanto, o processamento de cada reporte ocorrerá de maneira assíncrona.

O limite de registros de cada lote é 5.000 registros.


<h2 id="API de ingestão da coleta de métricas-Client-event">Client event</h2>
### `/report-api/v1/client-event`

Inclusão unitária de reporte pelo cliente.
Inclusão de reporte individual na plataforma por um participante no papel de receptor (lado que iniciou a chamada).


<h2 id="API de ingestão da coleta de métricas-Client-batch">Client batch</h2>
### `/report-api/v1/client-batch`

Inclusão em massa de reportes pelo lado do cliente (iniciador de chamada)
Inclusão de reportes em massa na plataforma. Ao enviar um lote de reportes, a plataforma
vai fazer o processo de validação de cada reporte de maneira síncrona e devolver o resultado
dessa validação na resposta, sendo que o status HTTP de retorno vai refletir esse resultado
(vide documentação de cada status de retorno). No entanto, o processamento de cada reporte
ocorrerá de maneira assíncrona.

O limite de registros de cada lote é de 5.000 registros.


<h3 id="obtem-a-lista-de-identificação-de-parameters">Parameters</h3>


|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Token de acesso.|


<h3 id="obtem-a-lista-de-identificação-de-schemas">Schemas</h3>

### Responses Report Event

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|OK|Registro recebido com sucesso.|#/components/schemas/success|
|400|Bad Request|Ocorre quando uma requisição não envia os dados obrigatórios.|#/components/schemas/response400|
|401|Unauthorized|Ocorre quando uma requisição não é autorizada.|#/components/schemas/response401|
|404|Not Found|Ocorre quando o reporte não é encontrado.|#/components/schemas/response404|
|406|Not Acceptable|Ocorre quando um cliente espera uma resposta diferente de application/json usando o header Accept.|#/components/schemas/response406|
|415|Unsupported Media Type|Ocorre quando uma requisição envia um Content-Type diferente de application/jwt.|#/components/schemas/response415|
|500|Internal Server Error|É devolvido quando ocorre um erro não identificado no servidor.|#/components/schemas/response500|


### Responses Report Batch

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|OK|O status 200 representa a situação onde todos os registros enviados no lote foram validados e serão direcionados para processamento. A operação vai devolver um array com todos os resultados, e garantir que ele esteja na mesma ordem do array de requisição.|#/components/schemas/success|
|207|multi status|O status 207 (Multi-Status) informa ao solicitante que o formato da solicitação está correto, mas que entradas do array da solicitação contém erro de validação, independente da quantidade. Ou seja, se todos os elementos do array informado estiverem com falha de validação, a operação vai devolver o status 207, e no corpo da resposta todos os elementos do array estarão com o status DISCARDED e com suas respectivas mensagens. A operação vai devolver um array com todos os resultados, e garantir que ele esteja na mesma ordem do array de requisição.|#/components/schemas/response400|
|400|Bad Request|O formato do corpo da requisição não é um array.|'Invalid payload format: MUST be an array'|
|401|Unauthorized|Ocorre quando uma requisição não é autorizada.|#/components/schemas/response401|
|406|Not Acceptable|Ocorre quando um cliente espera uma resposta diferente de application/json usando o header Accept.|#/components/schemas/response406|
|413|Payload Too Large|A quantidade de registros enviados excede o limite da operação, ou o tamanho do payload excede o limite configurado no servidor http.|#/components/schemas/response413|
|415|Unsupported Media Type|Ocorre quando uma requisição envia um Content-Type diferente de application/jwt.|#/components/schemas/response415|
|500|Internal Server Error|É devolvido quando ocorre um erro não identificado no servidor.|#/components/schemas/response500|

### Response Report

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|OK|Retorna os dados encontrados para o reporte id consultado.|#/components/schemas/reportBody|

